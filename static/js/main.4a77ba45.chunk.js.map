{"version":3,"sources":["utils/shuffle.ts","utils/flags.ts","utils/class-names.ts","components/u-button.tsx","guess-the-flag.tsx","utils/players.ts","app-routes.ts","home-page.tsx","App.tsx","index.tsx"],"names":["shuffle","array","console","assert","Array","isArray","i","length","j","Math","floor","random","temp","getFlags","continent","flags","africaFlags","asiaFlags","europeFlags","northAmericaFlags","oceaniaFlags","allFlags","getFlagImgPath","flag","countryCode","continentOptions","label","value","countryName","flat","classNames","classes","cssClasses","forEach","option","push","Object","entries","className","join","UButton","props","onClick","GuessTheFlag","useReducer","reducer","initialState","state","dispatch","GameBoardScreen","currentPlayerIndex","answeredQuestions","players","percentComplete","remainingFlags","style","width","map","player","index","key","name","score","view","kind","n","numberOfPlayers","updateSetup","selectedContinent","toString","continentOption","startGame","SetupView","src","alt","revealAnswer","QuestionView","markAsCorrectAnswer","role","aria-label","markAsWrongAnswer","AnswerView","playerResults","sort","pA","pB","goToSetup","ResultView","assertNever","x","Error","type","payload","action","splice","getPlayers","slice","remainingFlags2","appRoutes","HomePage","to","href","rel","target","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a77ba45.chunk.js","sourcesContent":["export function shuffle(array: any[]) {\n  console.assert(Array.isArray(array));\n\n  for (let i = array.length - 1; i > 0; i -= 1) {\n    let j = Math.floor(Math.random() * (i + 1));\n    let temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n","import { shuffle } from \"./shuffle\";\n\nexport function getFlags(continent: Continent | null): Flag[] {\n  let flags;\n  switch (continent) {\n    case \"africa\":\n      flags = africaFlags;\n      break;\n    case \"asia\":\n      flags = asiaFlags;\n      break;\n    case \"europe\":\n      flags = europeFlags;\n      break;\n    case \"north-america\":\n      flags = northAmericaFlags;\n      break;\n    case \"oceania\":\n      flags = oceaniaFlags;\n      break;\n    case \"south-america\":\n      flags = oceaniaFlags;\n      break;\n    default:\n      flags = allFlags;\n      break;\n  }\n\n  return shuffle(flags);\n}\n\nexport function getFlagImgPath(flag: Flag) {\n  return `/img-flags/${flag.countryCode}.png`;\n}\n\nexport type Continent =\n  | \"africa\"\n  | \"asia\"\n  | \"europe\"\n  | \"north-america\"\n  | \"oceania\"\n  | \"south-america\";\n\nexport const continentOptions: {\n  label: string;\n  value: Continent | null;\n}[] = [\n  { label: \"All\", value: null },\n  { label: \"Africa\", value: \"africa\" },\n  { label: \"Asia\", value: \"asia\" },\n  { label: \"Europe\", value: \"europe\" },\n  { label: \"North America\", value: \"north-america\" },\n  { label: \"Oceania\", value: \"oceania\" },\n  { label: \"South America\", value: \"south-america\" }\n];\n\nexport interface Flag {\n  countryCode: string;\n  countryName: string;\n  continent: Continent;\n}\n\nlet africaFlags: Flag[] = [\n  {\n    countryName: \"Algeria\",\n    countryCode: \"dz\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Angola\",\n    countryCode: \"ao\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Benin\",\n    countryCode: \"bj\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Botswana\",\n    countryCode: \"bw\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"British Indian Ocean Territory\",\n    countryCode: \"io\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Burkina Faso\",\n    countryCode: \"bf\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Burundi\",\n    countryCode: \"bi\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Cameroon\",\n    countryCode: \"cm\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Cape Verde\",\n    countryCode: \"cv\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Central African Republic\",\n    countryCode: \"cf\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Chad\",\n    countryCode: \"td\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Comoros\",\n    countryCode: \"km\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Republic of the Congo\",\n    countryCode: \"cg\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"DR Congo\",\n    countryCode: \"cd\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Côte d'Ivoire\",\n    countryCode: \"ci\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Djibouti\",\n    countryCode: \"dj\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Egypt\",\n    countryCode: \"eg\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Equatorial Guinea\",\n    countryCode: \"gq\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Eritrea\",\n    countryCode: \"er\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Eswatini\",\n    countryCode: \"sz\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Ethiopia\",\n    countryCode: \"et\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Gabon\",\n    countryCode: \"ga\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Gambia\",\n    countryCode: \"gm\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Ghana\",\n    countryCode: \"gh\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Guinea\",\n    countryCode: \"gn\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Guinea-Bissau\",\n    countryCode: \"gw\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Kenya\",\n    countryCode: \"ke\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Lesotho\",\n    countryCode: \"ls\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Liberia\",\n    countryCode: \"lr\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Libya\",\n    countryCode: \"ly\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Madagascar\",\n    countryCode: \"mg\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Malawi\",\n    countryCode: \"mw\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Mali\",\n    countryCode: \"ml\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Mauritania\",\n    countryCode: \"mr\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Mauritius\",\n    countryCode: \"mu\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Mayotte\",\n    countryCode: \"yt\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Morocco\",\n    countryCode: \"ma\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Mozambique\",\n    countryCode: \"mz\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Namibia\",\n    countryCode: \"na\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Niger\",\n    countryCode: \"ne\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Nigeria\",\n    countryCode: \"ng\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Réunion\",\n    countryCode: \"re\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Rwanda\",\n    countryCode: \"rw\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Saint Helena, Ascension and Tristan da Cunha\",\n    countryCode: \"sh\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"São Tomé and Príncipe\",\n    countryCode: \"st\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Senegal\",\n    countryCode: \"sn\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Seychelles\",\n    countryCode: \"sc\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Sierra Leone\",\n    countryCode: \"sl\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Somalia\",\n    countryCode: \"so\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"South Africa\",\n    countryCode: \"za\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"South Sudan\",\n    countryCode: \"ss\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Sudan\",\n    countryCode: \"sd\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Tanzania\",\n    countryCode: \"tz\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Togo\",\n    countryCode: \"tg\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Tunisia\",\n    countryCode: \"tn\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Uganda\",\n    countryCode: \"ug\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Western Sahara\",\n    countryCode: \"eh\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Zambia\",\n    countryCode: \"zm\",\n    continent: \"africa\"\n  },\n  {\n    countryName: \"Zimbabwe\",\n    countryCode: \"zw\",\n    continent: \"africa\"\n  }\n];\n\nlet asiaFlags: Flag[] = [\n  {\n    countryName: \"Armenia\",\n    countryCode: \"am\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Azerbaijan\",\n    countryCode: \"az\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Bahrain\",\n    countryCode: \"bh\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Bangladesh\",\n    countryCode: \"bd\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Bhutan\",\n    countryCode: \"bt\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Brunei\",\n    countryCode: \"bn\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Cambodia\",\n    countryCode: \"kh\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"China\",\n    countryCode: \"cn\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Egypt\",\n    countryCode: \"eg\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Georgia\",\n    countryCode: \"ge\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Hong Kong\",\n    countryCode: \"hk\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"India\",\n    countryCode: \"in\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Indonesia\",\n    countryCode: \"id\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Iran\",\n    countryCode: \"ir\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Iraq\",\n    countryCode: \"iq\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Israel\",\n    countryCode: \"il\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Japan\",\n    countryCode: \"jp\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Jordan\",\n    countryCode: \"jo\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Kazakhstan\",\n    countryCode: \"kz\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"North Korea\",\n    countryCode: \"kp\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"South Korea\",\n    countryCode: \"kr\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Kuwait\",\n    countryCode: \"kw\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Kyrgyzstan\",\n    countryCode: \"kg\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Laos\",\n    countryCode: \"la\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Lebanon\",\n    countryCode: \"lb\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Macau\",\n    countryCode: \"mo\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Malaysia\",\n    countryCode: \"my\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Maldives\",\n    countryCode: \"mv\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Mongolia\",\n    countryCode: \"mn\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Myanmar\",\n    countryCode: \"mm\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Nepal\",\n    countryCode: \"np\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Oman\",\n    countryCode: \"om\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Pakistan\",\n    countryCode: \"pk\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Palestine\",\n    countryCode: \"ps\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Philippines\",\n    countryCode: \"ph\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Qatar\",\n    countryCode: \"qa\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Russia\",\n    countryCode: \"ru\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Saudi Arabia\",\n    countryCode: \"sa\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Singapore\",\n    countryCode: \"sg\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Sri Lanka\",\n    countryCode: \"lk\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Syria\",\n    countryCode: \"sy\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Taiwan\",\n    countryCode: \"tw\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Tajikistan\",\n    countryCode: \"tj\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Thailand\",\n    countryCode: \"th\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Timor-Leste\",\n    countryCode: \"tl\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Turkey\",\n    countryCode: \"tr\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Turkmenistan\",\n    countryCode: \"tm\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"United Arab Emirates\",\n    countryCode: \"ae\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Uzbekistan\",\n    countryCode: \"uz\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Vietnam\",\n    countryCode: \"vn\",\n    continent: \"asia\"\n  },\n  {\n    countryName: \"Yemen\",\n    countryCode: \"ye\",\n    continent: \"asia\"\n  }\n];\n\nlet europeFlags: Flag[] = [\n  {\n    countryName: \"Åland Islands\",\n    countryCode: \"ax\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Albania\",\n    countryCode: \"al\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Andorra\",\n    countryCode: \"ad\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Austria\",\n    countryCode: \"at\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Belarus\",\n    countryCode: \"by\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Belgium\",\n    countryCode: \"be\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Bosnia and Herzegovina\",\n    countryCode: \"ba\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Bulgaria\",\n    countryCode: \"bg\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Croatia\",\n    countryCode: \"hr\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Cyprus\",\n    countryCode: \"cy\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Czechia\",\n    countryCode: \"cz\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Denmark\",\n    countryCode: \"dk\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Estonia\",\n    countryCode: \"ee\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Faroe Islands\",\n    countryCode: \"fo\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Finland\",\n    countryCode: \"fi\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"France\",\n    countryCode: \"fr\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Germany\",\n    countryCode: \"de\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Gibraltar\",\n    countryCode: \"gi\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Greece\",\n    countryCode: \"gr\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Guernsey\",\n    countryCode: \"gg\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Hungary\",\n    countryCode: \"hu\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Iceland\",\n    countryCode: \"is\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Ireland\",\n    countryCode: \"ie\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Isle of Man\",\n    countryCode: \"im\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Italy\",\n    countryCode: \"it\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Jersey\",\n    countryCode: \"je\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Kosovo\",\n    countryCode: \"xk\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Latvia\",\n    countryCode: \"lv\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Liechtenstein\",\n    countryCode: \"li\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Lithuania\",\n    countryCode: \"lt\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Luxembourg\",\n    countryCode: \"lu\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Malta\",\n    countryCode: \"mt\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Moldova\",\n    countryCode: \"md\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Monaco\",\n    countryCode: \"mc\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Montenegro\",\n    countryCode: \"me\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Netherlands\",\n    countryCode: \"nl\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"North Macedonia\",\n    countryCode: \"mk\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Norway\",\n    countryCode: \"no\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Poland\",\n    countryCode: \"pl\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Portugal\",\n    countryCode: \"pt\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Romania\",\n    countryCode: \"ro\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Russia\",\n    countryCode: \"ru\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"San Marino\",\n    countryCode: \"sm\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Serbia\",\n    countryCode: \"rs\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Slovakia\",\n    countryCode: \"sk\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Slovenia\",\n    countryCode: \"si\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Spain\",\n    countryCode: \"es\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Svalbard and Jan Mayen\",\n    countryCode: \"sj\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Sweden\",\n    countryCode: \"se\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Switzerland\",\n    countryCode: \"ch\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Turkey\",\n    countryCode: \"tr\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Ukraine\",\n    countryCode: \"ua\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"United Kingdom\",\n    countryCode: \"gb\",\n    continent: \"europe\"\n  },\n  {\n    countryName: \"Vatican City\",\n    countryCode: \"va\",\n    continent: \"europe\"\n  }\n];\n\nlet northAmericaFlags: Flag[] = [\n  {\n    countryName: \"Anguilla\",\n    countryCode: \"ai\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Antigua and Barbuda\",\n    countryCode: \"ag\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Aruba\",\n    countryCode: \"aw\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Bahamas\",\n    countryCode: \"bs\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Barbados\",\n    countryCode: \"bb\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Belize\",\n    countryCode: \"bz\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Bermuda\",\n    countryCode: \"bm\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Canada\",\n    countryCode: \"ca\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Caribbean Netherlands\",\n    countryCode: \"bq\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Cayman Islands\",\n    countryCode: \"ky\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Costa Rica\",\n    countryCode: \"cr\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Cuba\",\n    countryCode: \"cu\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Curaçao\",\n    countryCode: \"cw\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Dominica\",\n    countryCode: \"dm\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Dominican Republic\",\n    countryCode: \"do\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"El Salvador\",\n    countryCode: \"sv\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Greenland\",\n    countryCode: \"gl\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Grenada\",\n    countryCode: \"gd\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Guadeloupe\",\n    countryCode: \"gp\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Guatemala\",\n    countryCode: \"gt\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Haiti\",\n    countryCode: \"ht\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Honduras\",\n    countryCode: \"hn\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Jamaica\",\n    countryCode: \"jm\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Martinique\",\n    countryCode: \"mq\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Mexico\",\n    countryCode: \"mx\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Montserrat\",\n    countryCode: \"ms\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Nicaragua\",\n    countryCode: \"ni\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Panama\",\n    countryCode: \"pa\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Puerto Rico\",\n    countryCode: \"pr\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Saint Barthélemy\",\n    countryCode: \"bl\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Saint Kitts and Nevis\",\n    countryCode: \"kn\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Saint Lucia\",\n    countryCode: \"lc\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Saint Martin\",\n    countryCode: \"mf\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Saint Pierre and Miquelon\",\n    countryCode: \"pm\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Saint Vincent and the Grenadines\",\n    countryCode: \"vc\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Sint Maarten\",\n    countryCode: \"sx\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"Turks and Caicos Islands\",\n    countryCode: \"tc\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"United States\",\n    countryCode: \"us\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"United States Minor Outlying Islands\",\n    countryCode: \"um\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"British Virgin Islands\",\n    countryCode: \"vg\",\n    continent: \"north-america\"\n  },\n  {\n    countryName: \"United States Virgin Islands\",\n    countryCode: \"vi\",\n    continent: \"north-america\"\n  }\n];\n\nlet oceaniaFlags: Flag[] = [\n  {\n    countryName: \"American Samoa\",\n    countryCode: \"as\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Australia\",\n    countryCode: \"au\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Christmas Island\",\n    countryCode: \"cx\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Cocos Islands\",\n    countryCode: \"cc\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Cook Islands\",\n    countryCode: \"ck\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Fiji\",\n    countryCode: \"fj\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"French Polynesia\",\n    countryCode: \"pf\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Guam\",\n    countryCode: \"gu\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Indonesia\",\n    countryCode: \"id\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Kiribati\",\n    countryCode: \"ki\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Marshall Islands\",\n    countryCode: \"mh\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Micronesia\",\n    countryCode: \"fm\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Nauru\",\n    countryCode: \"nr\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"New Caledonia\",\n    countryCode: \"nc\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"New Zealand\",\n    countryCode: \"nz\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Niue\",\n    countryCode: \"nu\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Norfolk Island\",\n    countryCode: \"nf\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Northern Mariana Islands\",\n    countryCode: \"mp\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Palau\",\n    countryCode: \"pw\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Papua New Guinea\",\n    countryCode: \"pg\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Pitcairn Islands\",\n    countryCode: \"pn\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Samoa\",\n    countryCode: \"ws\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Solomon Islands\",\n    countryCode: \"sb\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Tokelau\",\n    countryCode: \"tk\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Tonga\",\n    countryCode: \"to\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Tuvalu\",\n    countryCode: \"tv\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Vanuatu\",\n    countryCode: \"vu\",\n    continent: \"oceania\"\n  },\n  {\n    countryName: \"Wallis and Futuna\",\n    countryCode: \"wf\",\n    continent: \"oceania\"\n  }\n];\n\nlet southAmericaFlags: Flag[] = [\n  {\n    countryName: \"Argentina\",\n    countryCode: \"ar\",\n    continent: \"south-america\"\n  },\n  {\n    countryName: \"Bolivia\",\n    countryCode: \"bo\",\n    continent: \"south-america\"\n  },\n  {\n    countryName: \"Brazil\",\n    countryCode: \"br\",\n    continent: \"south-america\"\n  },\n  {\n    countryName: \"Chile\",\n    countryCode: \"cl\",\n    continent: \"south-america\"\n  },\n  {\n    countryName: \"Colombia\",\n    countryCode: \"co\",\n    continent: \"south-america\"\n  },\n  {\n    countryName: \"Ecuador\",\n    countryCode: \"ec\",\n    continent: \"south-america\"\n  },\n  {\n    countryName: \"Falkland Islands\",\n    countryCode: \"fk\",\n    continent: \"south-america\"\n  },\n  {\n    countryName: \"French Guiana\",\n    countryCode: \"gf\",\n    continent: \"south-america\"\n  },\n  {\n    countryName: \"Guyana\",\n    countryCode: \"gy\",\n    continent: \"south-america\"\n  },\n  {\n    countryName: \"Paraguay\",\n    countryCode: \"py\",\n    continent: \"south-america\"\n  },\n  {\n    countryName: \"Peru\",\n    countryCode: \"pe\",\n    continent: \"south-america\"\n  },\n  {\n    countryName: \"Suriname\",\n    countryCode: \"sr\",\n    continent: \"south-america\"\n  },\n  {\n    countryName: \"Trinidad and Tobago\",\n    countryCode: \"tt\",\n    continent: \"south-america\"\n  },\n  {\n    countryName: \"Uruguay\",\n    countryCode: \"uy\",\n    continent: \"south-america\"\n  },\n  {\n    countryName: \"Venezuela\",\n    countryCode: \"ve\",\n    continent: \"south-america\"\n  }\n];\n\nlet allFlags = [\n  africaFlags,\n  asiaFlags,\n  europeFlags,\n  oceaniaFlags,\n  southAmericaFlags,\n  northAmericaFlags\n].flat();\n","export type ClassNameOption = { [key: string]: boolean } | string;\n\nexport function classNames(...cssClasses: ClassNameOption[]): string {\n  let classes: string[] = [];\n\n  cssClasses.forEach((option: ClassNameOption) => {\n    if (typeof option === \"string\") {\n      classes.push(option);\n    } else {\n      Object.entries(option).forEach(([className, isApplied]) => {\n        if (isApplied) {\n          classes.push(className);\n        }\n      });\n    }\n  });\n\n  return classes.join(\" \");\n}\n","import React, { MouseEventHandler } from \"react\";\nimport \"./u-button.css\";\n\ninterface Props {\n  label?: string;\n  onClick?: MouseEventHandler<HTMLButtonElement>;\n}\n\nexport function UButton(props: Props) {\n  return (\n    <button className=\"u-button\" onClick={props.onClick}>\n      {props.label}\n    </button>\n  );\n}\n","import React, { useReducer } from \"react\";\nimport {\n  getFlags,\n  getFlagImgPath,\n  Flag,\n  Continent,\n  continentOptions\n} from \"./utils/flags\";\nimport { getPlayers } from \"./utils/players\";\nimport { classNames } from \"./utils/class-names\";\nimport { UButton } from \"./components/u-button\";\nimport \"./guess-the-flag.css\";\n\nexport default function GuessTheFlag() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  function GameBoardScreen(state: QuestionState | AnswerState) {\n    let currentPlayerIndex = state.answeredQuestions % state.players.length;\n    let totalFlags = state.answeredQuestions + state.remainingFlags.length;\n    let percentComplete = (100 / totalFlags) * state.answeredQuestions;\n\n    return (\n      <div>\n        <div className=\"progress-bar\">\n          <div\n            className=\"progress-bar__bar\"\n            style={{ width: `${percentComplete}%` }}\n          />\n        </div>\n        <div className=\"flex justify-center\">\n          {state.players.map((player, index) => (\n            <div\n              key={player.name}\n              className={classNames(\"inline\", \"p-1\", \"m-1\", \"rounded\", {\n                \"game-board-player__active\": index === currentPlayerIndex\n              })}\n            >\n              <span className=\"mr-1\">{player.name}</span>\n              <span>{player.score}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  function ResultView(state: ResultState) {\n    return (\n      <div className=\"flex flex-col items-center\">\n        <h1 className=\"text-center\">It's over!!</h1>\n        <h3>The results</h3>\n        {state.playerResults\n          .sort((pA, pB) => pA.score - pB.score)\n          .map(player => (\n            <div>\n              {player.name} - {player.score}\n            </div>\n          ))}\n        <button className=\"button\" onClick={() => dispatch(goToSetup())}>\n          New game\n        </button>\n      </div>\n    );\n  }\n\n  function SetupView(state: SetupState) {\n    return (\n      <div className=\"max-w-sm\">\n        <h1 className=\"text-center text-3xl mt-3\">Guess the Flag</h1>\n        <h2 className=\"text-center mt-3\">How many players?</h2>\n        <div className=\"flex justify-center my-2\">\n          {[2, 3, 4, 5].map(n => (\n            <span\n              className={classNames(\"m-1\", {\n                \"opacity-50\": state.numberOfPlayers !== n\n              })}\n            >\n              <UButton\n                key={n}\n                onClick={() =>\n                  dispatch(updateSetup(n, state.selectedContinent))\n                }\n                label={n.toString()}\n              />\n            </span>\n          ))}\n        </div>\n        <h2 className=\"text-center mt-3 mb-2\">What continent?</h2>\n        <div className=\"flex justify-center flex-wrap\">\n          {continentOptions.map(continentOption => (\n            <span\n              key={continentOption.label}\n              className={classNames(\"m-1\", {\n                \"opacity-50\": state.selectedContinent !== continentOption.value\n              })}\n            >\n              <UButton\n                onClick={() =>\n                  dispatch(\n                    updateSetup(state.numberOfPlayers, continentOption.value)\n                  )\n                }\n                label={continentOption.label}\n              />\n            </span>\n          ))}\n        </div>\n        <div className=\"text-center mt-6\">\n          <UButton\n            onClick={() =>\n              dispatch(\n                startGame(state.numberOfPlayers, state.selectedContinent)\n              )\n            }\n            label=\"Start game\"\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function QuestionView(state: QuestionState) {\n    // TODO this might throw\n    let flag = state.remainingFlags[0];\n\n    return (\n      <div className=\"flex-grow\">\n        {GameBoardScreen(state)}\n        <h1 className=\"text-center mt-3\">Guess the flag</h1>\n        <img className=\"game-board-img\" src={getFlagImgPath(flag)} alt=\"Flag\" />\n        <div className=\"text-center text-2xl mt-2 mb-2 invisible\">\n          {flag.countryName}\n        </div>\n        <div className=\"text-center\">\n          <button className=\"button\" onClick={() => dispatch(revealAnswer())}>\n            Show me\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  function AnswerView(state: AnswerState) {\n    // TODO this might throw;\n    let flag = state.remainingFlags[0];\n\n    return (\n      <div className=\"flex-grow\">\n        {GameBoardScreen(state)}\n        <h1 className=\"text-center mt-3\">Guess the flag</h1>\n        <img className=\"game-board-img\" src={getFlagImgPath(flag)} alt=\"Flag\" />\n        <div className=\"text-center text-2xl mt-2 mb-2\">{flag.countryName}</div>\n        <div className=\"text-center\">\n          <button\n            className=\"button mr-1\"\n            onClick={() => dispatch(markAsCorrectAnswer())}\n          >\n            <span role=\"img\" aria-label=\"Correct\">\n              👍\n            </span>\n          </button>\n          <button\n            className=\"button\"\n            onClick={() => dispatch(markAsWrongAnswer())}\n          >\n            <span role=\"img\" aria-label=\"Wrong\">\n              👎\n            </span>\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  let view: JSX.Element = <div />;\n  switch (state.kind) {\n    case \"setup\":\n      view = SetupView(state);\n      break;\n    case \"question\":\n      view = QuestionView(state);\n      break;\n    case \"answer\":\n      view = AnswerView(state);\n      break;\n    case \"result\":\n      view = ResultView(state);\n      break;\n    default:\n      assertNever(state);\n      break;\n  }\n\n  return <div className=\"justify-center flex\">{view}</div>;\n}\n\nfunction assertNever(x: never): never {\n  throw new Error(\"Unexpected object: \" + x);\n}\n\ninterface Player {\n  name: string;\n  score: number;\n}\n\n// States\nexport const initialState: SetupState = {\n  kind: \"setup\",\n  selectedContinent: null,\n  numberOfPlayers: 2\n};\n\ninterface SetupState {\n  kind: \"setup\";\n  selectedContinent: Continent | null;\n  numberOfPlayers: number;\n}\n\ninterface QuestionState {\n  kind: \"question\";\n  players: Player[];\n  answeredQuestions: number;\n  remainingFlags: Flag[];\n}\n\ninterface AnswerState {\n  kind: \"answer\";\n  players: Player[];\n  answeredQuestions: number;\n  remainingFlags: Flag[];\n}\n\ninterface ResultState {\n  kind: \"result\";\n  playerResults: Player[];\n}\n\ntype State = SetupState | QuestionState | AnswerState | ResultState;\n\n// Actions\ninterface RevealAnswerAction {\n  type: \"REVEAL_ANSWER\";\n}\ninterface UpdateSetupAction {\n  type: \"UPDATE_SETUP\";\n  payload: {\n    numberOfPlayers: number;\n    selectedContinent: Continent | null;\n  };\n}\ninterface StartGameAction {\n  type: \"START_GAME\";\n  payload: {\n    numberOfPlayers: number;\n    selectedContinent: Continent | null;\n  };\n}\ninterface RevealAnswerAction {\n  type: \"REVEAL_ANSWER\";\n}\ninterface MarkAsCorrectAnswer {\n  type: \"MARK_AS_CORRECT\";\n}\ninterface MarkAsWrongAnswer {\n  type: \"MARK_AS_WRONG\";\n}\ninterface GoToSetupAction {\n  type: \"GO_TO_SETUP\";\n}\n\nlet updateSetup = (\n  numberOfPlayers: number,\n  selectedContinent: Continent | null\n): UpdateSetupAction => ({\n  type: \"UPDATE_SETUP\",\n  payload: {\n    numberOfPlayers,\n    selectedContinent\n  }\n});\n\nlet startGame = (\n  numberOfPlayers: number,\n  selectedContinent: Continent | null\n): StartGameAction => ({\n  type: \"START_GAME\",\n  payload: {\n    numberOfPlayers,\n    selectedContinent\n  }\n});\n\nlet revealAnswer = (): RevealAnswerAction => ({ type: \"REVEAL_ANSWER\" });\n\nlet markAsCorrectAnswer = (): MarkAsCorrectAnswer => ({\n  type: \"MARK_AS_CORRECT\"\n});\n\nlet markAsWrongAnswer = (): MarkAsWrongAnswer => ({ type: \"MARK_AS_WRONG\" });\n\nlet goToSetup = (): GoToSetupAction => ({ type: \"GO_TO_SETUP\" });\n\ntype Actions =\n  | UpdateSetupAction\n  | StartGameAction\n  | RevealAnswerAction\n  | MarkAsCorrectAnswer\n  | MarkAsWrongAnswer\n  | GoToSetupAction;\n\n// Reducer\nexport function reducer(state: State, action: Actions): State {\n  switch (action.type) {\n    case \"UPDATE_SETUP\":\n      let {\n        numberOfPlayers: numOfPlayers,\n        selectedContinent: selContinent\n      } = action.payload;\n\n      return {\n        kind: \"setup\",\n        numberOfPlayers: numOfPlayers,\n        selectedContinent: selContinent\n      };\n\n    case \"START_GAME\":\n      let { numberOfPlayers, selectedContinent } = action.payload;\n      let players = getPlayers(numberOfPlayers);\n\n      return {\n        kind: \"question\",\n        players,\n        answeredQuestions: 0,\n        remainingFlags: getFlags(selectedContinent)\n      };\n\n    case \"REVEAL_ANSWER\":\n      if (state.kind !== \"question\") {\n        return state;\n      }\n\n      return {\n        kind: \"answer\",\n        players: state.players,\n        answeredQuestions: state.answeredQuestions,\n        remainingFlags: state.remainingFlags\n      };\n\n    case \"MARK_AS_CORRECT\":\n      if (state.kind !== \"answer\") {\n        return state;\n      }\n\n      let currentPlayerIndex = state.answeredQuestions % state.players.length;\n      let remainingFlags = [...state.remainingFlags.slice(1)];\n\n      if (remainingFlags.length === 0) {\n        // TODO they can have a same amount of points\n        return {\n          kind: \"result\",\n          playerResults: state.players\n        };\n      }\n\n      return {\n        kind: \"question\",\n        players: state.players.map((player, index) => {\n          if (index === currentPlayerIndex) {\n            return {\n              ...player,\n              score: player.score + 1\n            };\n          }\n          return player;\n        }),\n        answeredQuestions: state.answeredQuestions + 1,\n        remainingFlags\n      };\n\n    case \"MARK_AS_WRONG\":\n      if (state.kind !== \"answer\") {\n        return state;\n      }\n\n      let remainingFlags2 = [...state.remainingFlags.slice(1)];\n\n      if (remainingFlags2.length === 0) {\n        // TODO they can have a same amount of points\n        return {\n          kind: \"result\",\n          playerResults: state.players\n        };\n      }\n\n      return {\n        kind: \"question\",\n        players: state.players,\n        answeredQuestions: state.answeredQuestions + 1,\n        remainingFlags: remainingFlags2\n      };\n\n    case \"GO_TO_SETUP\":\n      return initialState;\n\n    default:\n      assertNever(action);\n  }\n}\n","import { shuffle } from \"./shuffle\";\n\nexport function getPlayers(numberOfPlayers: number) {\n  console.assert(numberOfPlayers > 0);\n\n  let names = [\"Joey\", \"Ross\", \"Rachel\", \"Monica\", \"Phoebe\"];\n\n  return shuffle(names)\n    .splice(0, numberOfPlayers)\n    .map(name => ({\n      name: name,\n      score: 0\n    }));\n}\n","export const appRoutes = {\n  home: \"/\",\n  guessTheFlag: \"/guess-the-flag\"\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { appRoutes } from \"./app-routes\";\nimport \"./home-page.css\";\n\nexport function HomePage() {\n  return (\n    <div className=\"text-center mt-2\">\n      <img src=\"logo.svg\" alt=\"Unload Games logo\" className=\"max-w-sm px-4\" />\n      <nav className=\"menu\">\n        <Link to={appRoutes.guessTheFlag} className=\"menu__item\">\n          Guess the flag\n        </Link>\n      </nav>\n      <div className=\"mt-8 text-gray-400 text-sm\">\n        <div>\n          <span>Made by </span>\n          <a\n            href=\"https://ondrejsevcik.com\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            className=\"underline\"\n          >\n            Ondrej Sevcik\n          </a>\n        </div>\n        <div>\n          <a\n            href=\"https://github.com/ondrejsevcik/unload-games\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            className=\"underline\"\n          >\n            [source]\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport GuessTheFlag from \"./guess-the-flag\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { HomePage } from \"./home-page\";\nimport { appRoutes } from \"./app-routes\";\n\nexport function App() {\n  return (\n    <div className=\"max-w-sm m-auto\">\n      <Router>\n        <Switch>\n          <Route path={appRoutes.guessTheFlag}>\n            <GuessTheFlag />\n          </Route>\n          <Route path={appRoutes.home}>\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}